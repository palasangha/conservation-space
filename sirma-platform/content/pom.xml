<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sirma.sep</groupId>
	<artifactId>content</artifactId>
	<version>2.28.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<modules>
		<module>content-api</module>
		<module>content-core</module>
		<module>content-idoc</module>
		<module>content-idoc-extensions</module>
		<module>content-thumbnail</module>
		<module>content-preview-integration</module>
	</modules>

	<properties>
		<version.java>1.8</version.java>
		<version.jacoco>0.7.9</version.jacoco>
		<content.version>${project.version}</content.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.javacrumbs.json-unit</groupId>
			<artifactId>json-unit</artifactId>
			<version>1.5.5</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.sirma.itt.seip</groupId>
				<artifactId>seip-bom</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!--Resolves a conflict in the hamscret versions of junit and mockito -->
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-core</artifactId>
				<version>1.3</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>disable-java8-doclint</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<properties>
				<additionalparam>-Xdoclint:none</additionalparam>
			</properties>
		</profile>
		
		<profile>
			<id>testing</id>
			<activation>
				<property>
					<name>!skipDefaultTestingProfile</name>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.testng</groupId>
					<artifactId>testng</artifactId>
					<scope>test</scope>
				</dependency>
				<!-- needed in runtime as well from liquibase -->
				<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</dependency>
				<dependency>
					<groupId>org.mockito</groupId>
					<artifactId>mockito-core</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.easymock</groupId>
					<artifactId>easymock</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.powermock</groupId>
					<artifactId>powermock-module-junit4</artifactId>
					<version>1.6.2</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.powermock</groupId>
					<artifactId>powermock-api-easymock</artifactId>
					<version>1.6.2</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>net.javacrumbs.json-unit</groupId>
					<artifactId>json-unit</artifactId>
					<version>1.5.5</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.code.gson</groupId>
					<artifactId>gson</artifactId>
					<version>2.3.1</version>
				</dependency>
				<dependency>
					<groupId>com.sun.jersey</groupId>
					<artifactId>jersey-client</artifactId>
					<version>1.19</version>
					<exclusions>
						<!-- Needed because a collision is caused between javax and jsr libraries -->
						<exclusion>
							<groupId>javax.ws.rs</groupId>
							<artifactId>jsr311-api</artifactId>
						</exclusion>
					</exclusions>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.sun.jersey</groupId>
					<artifactId>jersey-core</artifactId>
					<version>1.19</version>
					<exclusions>
						<!-- Needed because a collision is caused between javax and jsr libraries -->
						<exclusion>
							<groupId>javax.ws.rs</groupId>
							<artifactId>jsr311-api</artifactId>
						</exclusion>
					</exclusions>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.glassfish.jersey.core</groupId>
					<artifactId>jersey-common</artifactId>
					<version>2.4.1</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>de.akquinet.jbosscc</groupId>
					<artifactId>jbosscc-needle</artifactId>
					<version>2.2</version>
					<scope>test</scope>
				</dependency>

				<!-- To use/disable TestNG for testing uncomment/comment next block -->

				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-api-maven</artifactId>
					<version>2.1.1</version>
					<scope>test</scope>
				</dependency>

				<dependency>
					<groupId>org.codehaus.jettison</groupId>
					<artifactId>jettison</artifactId>
					<version>1.5.1</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.spec.javax.faces</groupId>
					<artifactId>jboss-jsf-api_2.2_spec</artifactId>
					<version>2.2.10</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		
		<profile>
			<id>unit-test-cc</id>
			<dependencies>
				<dependency>
					<groupId>org.jacoco</groupId>
					<artifactId>org.jacoco.core</artifactId>
					<version>${version.jacoco}</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>**/*CITest.java</exclude>
							</excludes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${version.jacoco}</version>
						<configuration>
							<dumpOnExit>true</dumpOnExit>
						</configuration>
						<executions>
							<execution>
								<id>pre-unit-test</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${project.build.directory}/jacoco-ut.exec</destFile>
									<propertyName>argLine</propertyName>
								</configuration>
							</execution>
							<execution>
								<id>post-unit-test</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.5.1</version>
					<configuration>
						<source>${version.java}</source>
						<target>${version.java}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.3.0.603</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.1</version>
					<configuration>
						<!-- https://issues.apache.org/jira/browse/SUREFIRE-1588 -->
						<useSystemClassLoader>false</useSystemClassLoader>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.20</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>